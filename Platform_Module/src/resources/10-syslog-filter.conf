    filter {
      if [type] == "syslog" {
        grok {
          match => [
          "message" , "%{SYSLOGTIMESTAMP:Date} (?:%{SYSLOGFACILITY} )?%{SYSLOGHOST:HostName} %{SYSLOGPROG:DaemonName}: %{WORD:Status} %{WORD:nothing2} %{WORD:nothing3} %{WORD:UserName} %{WORD:nothing4} %{IP:ClientIp} %{WORD:nothing5} %{NUMBER:ClientPort} %{WORD:ClientDaemon}",
          "message", "Anomaly detected: {Anomaly_Name: %{WORD:algorithm}, Date:%{SYSLOGTIMESTAMP:date_of_detec}, IP:%{IP:IP_of_Switch}, Port:%{NUMBER:port}}",
          "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}",
          "message", "Anomaly detected: {{date: %{SYSLOGTIMESTAMP:date_of_detec}, info: %{WORD:protocol_attack_type}, type: %{WORD:algorithm}, additional_info: SINGLETON_IP:%{IP:singleton_ip}}}",
          "message", "Anomaly detected: {{date: %{SYSLOGTIMESTAMP:date_of_detec}, info: %{WORD:protocol_attack_type}, type: %{WORD:algorithm}, additional_info: \[\[%{DATA:victim_ip}, \[%{DATA:distributed_ips}\]\]\]}}"
          ]
          add_field => [ "received_at", "%{@timestamp}" ]
          add_field => [ "received_from", "%{host}" ]
        }
        syslog_pri { }
        date {
          match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
        mutate {
             split => { "distributed_ips" => "," }
        }
      }
    }

